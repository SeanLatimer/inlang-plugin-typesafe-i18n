var h=async(e,t,r=0)=>{let n=await e.readdir(t,{withFileTypes:!0}),a=n.filter(s=>!s.isDirectory()).map(({name:s})=>({name:s.toString(),folder:""})),i=n.filter(s=>s.isDirectory());if(r)for(let s of i)a.push(...(await h(e,`${t}/${s.name}/`,r-1)).map(o=>({name:o.name.toString(),folder:s.name.toString()})));return a},$=async(e,t,r)=>{let n=r==="JavaScript"?".js":".ts";return(await h(e,t,1)).filter(({folder:i,name:s})=>i&&s===`index${n}`).map(({folder:i})=>i)},x=async e=>({baseLocale:"en",tempPath:"./node_modules/typesafe-i18n/temp-output/",outputPath:"./src/i18n/",outputFormat:"TypeScript",typesFileName:"i18n-types",utilFileName:"i18n-util",formattersTemplateFileName:"formatters",typesTemplateFileName:"custom-types",esmImports:!1,adapter:void 0,generateOnlyTypes:!1,banner:"/* eslint-disable */",runAfterGenerator:void 0,...e}),k=async e=>{let t=await e.readFile(".typesafe-i18n.json").catch(()=>"{}");return JSON.parse(t.toString())},u=async e=>{let t=await k(e);return x(t)},v=async e=>{let t=await u(e);return{base:t.baseLocale,locales:await $(e,t.outputPath,t.outputFormat)}};var w=e=>e!==void 0,R=e=>typeof e=="string",j=e=>t=>t[e],E=e=>Array.from(new Set(e)),I=e=>Object.fromEntries(Object.entries(e).map(([t,r])=>t!=="i"&&r&&r!="0"&&[t,r]).filter(Boolean)),S=e=>Object.fromEntries(Object.keys(e).map(t=>{let r=e[t];return[t,Array.isArray(r)?r.map(n=>n?.trim()):r===!!r?r:r?.trim()]})),C=e=>{let[t="",...r]=e.split("|"),[n="",a]=t.split(":"),[i,s]=n.split("?");return{k:i,i:a,n:s==="",f:r}},F=e=>!!(e.o||e.r),O=(e,t)=>{let[r,n]=e.split(":");n||(n=r,r=t);let a=n.split("|"),[i,s,o,l,c,p]=a,f=a.filter(T=>T!==void 0).length;return f===1?{k:r,r:i}:f===2?{k:r,o:i,r:s}:f===3?{k:r,z:i,o:s,r:o}:{k:r,z:i,o:s,t:o,f:l,m:c,r:p}},z=/^\{.*\}$/,M=e=>Object.fromEntries(g(e).split(",").map(t=>t.split(":")).reduce((t,r)=>r.length===2?[...t,r.map(n=>n.trim())]:(t[t.length-1][1]+=","+r[0],t),[])),P=/(\{(?:[^{}]+|\{(?:[^{}]+)*\})*\})/g,g=e=>e.substring(1,e.length-1),A=(e,t=!0,r="",n="")=>e.split(P).map(a=>{if(!a.match(P))return a;let i=g(a);if(i.startsWith("{"))return O(g(i),n);let s=C(i);return n=s.k||n,!r&&(r=n),s}).map(a=>{if(typeof a=="string")return a;a.k||(a.k=r||"0");let i=S(a);return t?I(i):i});var W=e=>e.kind==="plural",L=e=>e.kind==="parameter",_=e=>e.kind==="switch-case",b=e=>J(A(e,!1).map(B).filter(w)),B=e=>R(e)?e?D(e):void 0:F(e)?N(e):V(e),D=e=>({kind:"text",content:e}),N=({k:e,z:t,o:r,t:n,f:a,m:i,r:s})=>({kind:"plural",key:e,...t?{zero:t}:void 0,...r?{one:r}:void 0,...n?{two:n}:void 0,...a?{few:a}:void 0,...i?{many:i}:void 0,other:s}),V=({k:e,i:t,n:r,f:n})=>({kind:"parameter",key:e,types:t?[t]:[],optional:r||!1,transforms:(n||[]).map(G)}),G=e=>e.match(z)?{kind:"switch-case",cases:Object.entries(M(e)).map(([r,n])=>({key:r,value:n})),raw:e}:{kind:"formatter",name:e},J=e=>{let t=e.filter(L),r=e.filter(W),n={};return t.forEach(({key:a,types:i,transforms:s,optional:o})=>{var l,c;let p=i.length?i:U(s);n[a]={types:E([...((l=n[a])==null?void 0:l.types)||[],...p]).filter(w),optional:((c=n[a])==null?void 0:c.optional)||o}}),r.forEach(({key:a})=>{var i;(i=n[a])!=null&&i.types.length||(n[a]={types:["string","number","boolean"],optional:!1})}),Object.keys(n).forEach(a=>{var i,s;(i=n[a])!=null&&i.types.length||(n[a]={types:["unknown"],optional:((s=n[a])==null?void 0:s.optional)||!1})}),Object.entries(n).forEach(([a,i])=>{let s=t.find(o=>o.key===a);s&&(s.types=i.types,s.optional=s.optional||i.optional)}),e},U=e=>{if(!e?.length)return[];let t=e[0];return _(t)?t.cases.map(j("key")).map(n=>n==="*"?"string":`'${n}'`):[]};function m(e){return t=>r=>e({settings:t,env:r})}var X=m(({env:e})=>({id:"ivanhofer.inlang-plugin-typesafe-i18n",async config(){let{base:t,locales:r}=await v(y(e.$fs));return{referenceLanguage:t,languages:r,readResources:({config:n})=>q({config:n,...e}),writeResources:({config:n,resources:a})=>ee({config:n,resources:a,...e})}}})),d=(...e)=>e.map(t=>{for(;t.startsWith("/");)t=t.substring(1);for(;t.endsWith("/");)t=t.substring(0,t.length-1);return t}).join("/"),y=e=>({...e,readdir:async(t,r)=>{let n=await e.readdir(t);return r?.withFileTypes?n.map(a=>({name:a,isDirectory:()=>!(a.endsWith(".ts")||a.endsWith(".js"))})):n}});async function q({config:e,$fs:t}){let r=y(t),n=await u(r),a=[];for(let i of e.languages){let s=await H(r,n.outputPath,i);a.push(Q(s,i))}return a}var H=async(e,t,r)=>{let s=(await e.readFile(d(t,`${r}/index.ts`),{encoding:"utf-8"})).toString().split(`
`).filter(l=>!l.trim().startsWith("import ")).join(`
`).replace(/:.*=/g," =").replace(/ satisfies.*\/n/g,`
`);return(await import("data:application/javascript,"+encodeURIComponent(s))).default},Q=(e,t)=>({type:"Resource",languageTag:{type:"LanguageTag",name:t},body:Object.entries(e).map(([r,n])=>Y(r,n))}),Y=(e,t)=>{let r=b(t);return{type:"Message",id:{type:"Identifier",name:e},pattern:{type:"Pattern",elements:r.map(n=>{switch(n.kind){case"parameter":return Z(n);case"text":return{type:"Text",value:n.content};case"plural":return K(n)}})}}},Z=e=>({type:"Placeholder",body:{type:"VariableReference",name:e.key,metadata:{types:e.types,optional:e.optional,transforms:e.transforms}}}),K=e=>({type:"Text",value:`{{${[e.zero,e.one,e.two,e.few,e.many,e.other].filter(Boolean).join("|")}}}`});async function ee({$fs:e,config:t,resources:r}){let n=y(e),a=await u(n);for(let i of r){let s=i.languageTag.name,o=te(i),l=s===t.referenceLanguage?"BaseTranslation":"Translation",c=`import type { ${l} } from '${d(a.outputPath,a.typesFileName)}'
const ${s}: ${l} = ${o}

export default ${s}`;await n.writeFile(d(a.outputPath,`${s}/index.ts`),c)}}var te=e=>{let t=Object.fromEntries(e.body.map(re));return JSON.stringify(t,null,3)},re=e=>[e.id.name,ne(e.pattern)],ne=e=>e.elements.map(ae).join(""),ae=e=>{switch(e.type){case"Text":return e.value;case"Placeholder":return ie(e)}},ie=({body:{name:e,metadata:t={}}})=>{let r=e;return t.optional&&(r+="?"),t.types?.length>0&&(r+=`:${t.types.join("|")}`),t.transforms?.length>0&&(r+=`|${t.transforms.join("|")}`),`{${r}}`};export{X as default};
/*! Bundled license information:

@inlang/core/dist/plugin/pluginBuildConfig.js:
  (*! DON'T TOP-LEVEL IMPORT ESBUILD PLUGINS. USE DYNAMIC IMPORTS. *)
  (*! See https://github.com/inlang/inlang/issues/486 *)
*/
