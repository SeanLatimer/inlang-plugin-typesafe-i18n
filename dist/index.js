var f=async(e,t,n=0)=>{let r=await e.readdir(t,{withFileTypes:!0}),a=r.filter(i=>!i.isDirectory()).map(({name:i})=>({name:i.toString(),folder:""})),s=r.filter(i=>i.isDirectory());if(n)for(let i of s)a.push(...(await f(e,`${t}/${i.name}/`,n-1)).map(o=>({name:o.name.toString(),folder:i.name.toString()})));return a},y=async(e,t,n)=>{let r=n==="JavaScript"?".js":".ts";return(await f(e,t,1)).filter(({folder:s,name:i})=>s&&i===`index${r}`).map(({folder:s})=>s)},h=async e=>({baseLocale:"en",tempPath:"./node_modules/typesafe-i18n/temp-output/",outputPath:"./src/i18n/",outputFormat:"TypeScript",typesFileName:"i18n-types",utilFileName:"i18n-util",formattersTemplateFileName:"formatters",typesTemplateFileName:"custom-types",esmImports:!1,adapter:void 0,generateOnlyTypes:!1,banner:"/* eslint-disable */",runAfterGenerator:void 0,...e}),w=async e=>{let t=await e.readFile(".typesafe-i18n.json").catch(()=>"{}");return JSON.parse(t.toString())},u=async e=>{let t=await w(e);return h(t)},m=async e=>{let t=await u(e);return{base:t.baseLocale,locales:await y(e,t.outputPath,t.outputFormat)}};function c(e){return t=>n=>e({settings:t,env:n})}var b=c(({env:e})=>({id:"ivanhofer.inlang-plugin-typesafe-i18n",async config(){let{base:t,locales:n}=await m(g(e.$fs));return{referenceLanguage:t,languages:n,readResources:({config:r})=>R({config:r,...e}),writeResources:({config:r,resources:a})=>I({config:r,resources:a,...e})}}})),p=(...e)=>e.map(t=>{for(;t.startsWith("/");)t=t.substring(1);for(;t.endsWith("/");)t=t.substring(0,t.length-1);return t}).join("/"),g=e=>({...e,readdir:async(t,n)=>{let r=await e.readdir(t);return n?.withFileTypes?r.map(a=>({name:a,isDirectory:()=>!(a.endsWith(".ts")||a.endsWith(".js"))})):r}});async function R({config:e,$fs:t}){let n=g(t),r=await u(n),a=[];for(let s of e.languages){let i=await v(n,r.outputPath,s);a.push(x(i,s))}return a}var v=async(e,t,n)=>{let i=(await e.readFile(p(t,`${n}/index.ts`),{encoding:"utf-8"})).toString().split(`
`).filter(l=>!l.trim().startsWith("import ")).join(`
`).replace(/:.*=/g," =").replace(/ satisfies.*\/n/g,`
`);return(await import("data:application/javascript,"+encodeURIComponent(i))).default},x=(e,t)=>({type:"Resource",languageTag:{type:"LanguageTag",name:t},body:Object.entries(e).map(([n,r])=>P(n,r))}),P=(e,t)=>({type:"Message",id:{type:"Identifier",name:e},pattern:{type:"Pattern",elements:[{type:"Text",value:t}]}});async function I({$fs:e,config:t,resources:n}){let r=g(e),a=await u(r);for(let s of n){let i=s.languageTag.name,o=T(s),l=i===t.referenceLanguage?"BaseTranslation":"Translation",d=`import type { ${l} } from '${p(a.outputPath,a.typesFileName)}'
const ${i}: ${l} = ${o}

export default ${i}`;await r.writeFile(p(a.outputPath,`${i}/index.ts`),d)}}var T=e=>{let t=Object.fromEntries(e.body.map($));return JSON.stringify(t,null,3)};function $(e){return[e.id.name,F(e.pattern)]}function F(e){return e.elements.map(C).join("")}function C(e){switch(e.type){case"Text":return e.value;case"Placeholder":return`{${e.body.name}}`}}export{b as default};
/*! Bundled license information:

@inlang/core/dist/plugin/pluginBuildConfig.js:
  (*! DON'T TOP-LEVEL IMPORT ESBUILD PLUGINS. USE DYNAMIC IMPORTS. *)
  (*! See https://github.com/inlang/inlang/issues/486 *)
*/
