var h=async(e,t,r=0)=>{let n=await e.readdir(t,{withFileTypes:!0}),i=n.filter(s=>!s.isDirectory()).map(({name:s})=>({name:s.toString(),folder:""})),a=n.filter(s=>s.isDirectory());if(r)for(let s of a)i.push(...(await h(e,`${t}/${s.name}/`,r-1)).map(o=>({name:o.name.toString(),folder:s.name.toString()})));return i},k=async(e,t,r)=>{let n=r==="JavaScript"?".js":".ts";return(await h(e,t,1)).filter(({folder:a,name:s})=>a&&s===`index${n}`).map(({folder:a})=>a)},E=async e=>({baseLocale:"en",tempPath:"./node_modules/typesafe-i18n/temp-output/",outputPath:"./src/i18n/",outputFormat:"TypeScript",typesFileName:"i18n-types",utilFileName:"i18n-util",formattersTemplateFileName:"formatters",typesTemplateFileName:"custom-types",esmImports:!1,adapter:void 0,generateOnlyTypes:!1,banner:"/* eslint-disable */",runAfterGenerator:void 0,...e}),I=async e=>{let t=await e.readFile(".typesafe-i18n.json").catch(()=>"{}");return JSON.parse(t.toString())},u=async e=>{let t=await I(e);return E(t)},v=async e=>{let t=await u(e);return{base:t.baseLocale,locales:await k(e,t.outputPath,t.outputFormat)}};function d(e){return t=>r=>e({settings:t,env:r})}var w=e=>e!==void 0,j=e=>typeof e=="string",C=e=>t=>t[e],S=e=>Array.from(new Set(e)),F=e=>Object.fromEntries(Object.entries(e).map(([t,r])=>t!=="i"&&r&&r!="0"&&[t,r]).filter(Boolean)),O=e=>Object.fromEntries(Object.keys(e).map(t=>{let r=e[t];return[t,Array.isArray(r)?r.map(n=>n?.trim()):r===!!r?r:r?.trim()]})),z=e=>{let[t="",...r]=e.split("|"),[n="",i]=t.split(":"),[a,s]=n.split("?");return{k:a,i,n:s==="",f:r}},M=e=>!!(e.o||e.r),A=(e,t)=>{let[r,n]=e.split(":");n||(n=r,r=t);let i=n.split("|"),[a,s,o,l,c,m]=i,g=i.filter(R=>R!==void 0).length;return g===1?{k:r,r:a}:g===2?{k:r,o:a,r:s}:g===3?{k:r,z:a,o:s,r:o}:{k:r,z:a,o:s,t:o,f:l,m:c,r:m}},W=/^\{.*\}$/,L=e=>Object.fromEntries(y(e).split(",").map(t=>t.split(":")).reduce((t,r)=>r.length===2?[...t,r.map(n=>n.trim())]:(t[t.length-1][1]+=","+r[0],t),[])),P=/(\{(?:[^{}]+|\{(?:[^{}]+)*\})*\})/g,y=e=>e.substring(1,e.length-1),_=(e,t=!0,r="",n="")=>e.split(P).map(i=>{if(!i.match(P))return i;let a=y(i);if(a.startsWith("{"))return A(y(a),n);let s=z(a);return n=s.k||n,!r&&(r=n),s}).map(i=>{if(typeof i=="string")return i;i.k||(i.k=r||"0");let a=O(i);return t?F(a):a});var B=e=>e.kind==="plural",D=e=>e.kind==="parameter",N=e=>e.kind==="switch-case",b=e=>q(_(e,!1).map(V).filter(w)),V=e=>j(e)?e?G(e):void 0:M(e)?J(e):U(e),G=e=>({kind:"text",content:e}),J=({k:e,z:t,o:r,t:n,f:i,m:a,r:s})=>({kind:"plural",key:e,...t?{zero:t}:void 0,...r?{one:r}:void 0,...n?{two:n}:void 0,...i?{few:i}:void 0,...a?{many:a}:void 0,other:s}),U=({k:e,i:t,n:r,f:n})=>({kind:"parameter",key:e,types:t?[t]:[],optional:r||!1,transforms:(n||[]).map(X)}),X=e=>e.match(W)?{kind:"switch-case",cases:Object.entries(L(e)).map(([r,n])=>({key:r,value:n})),raw:e}:{kind:"formatter",name:e},q=e=>{let t=e.filter(D),r=e.filter(B),n={};return t.forEach(({key:i,types:a,transforms:s,optional:o})=>{var l,c;let m=a.length?a:H(s);n[i]={types:S([...((l=n[i])==null?void 0:l.types)||[],...m]).filter(w),optional:((c=n[i])==null?void 0:c.optional)||o}}),r.forEach(({key:i})=>{var a;(a=n[i])!=null&&a.types.length||(n[i]={types:["string","number","boolean"],optional:!1})}),Object.keys(n).forEach(i=>{var a,s;(a=n[i])!=null&&a.types.length||(n[i]={types:["unknown"],optional:((s=n[i])==null?void 0:s.optional)||!1})}),Object.entries(n).forEach(([i,a])=>{let s=t.find(o=>o.key===i);s&&(s.types=a.types,s.optional=s.optional||a.optional)}),e},H=e=>{if(!e?.length)return[];let t=e[0];return N(t)?t.cases.map(C("key")).map(n=>n==="*"?"string":`'${n}'`):[]};var p=e=>({...e,readdir:async(t,r)=>{let n=await e.readdir(t);return r?.withFileTypes?n.map(i=>({name:i,isDirectory:()=>!(i.endsWith(".ts")||i.endsWith(".js"))})):n}}),f=(...e)=>e.map(t=>{for(;t.startsWith("/");)t=t.substring(1);for(;t.endsWith("/");)t=t.substring(0,t.length-1);return t}).join("/");async function $({config:e,$fs:t}){let r=p(t),n=await u(r),i=[];for(let a of e.languages){let s=await Q(r,n.outputPath,a);i.push(Y(s,a))}return i}var Q=async(e,t,r)=>{let s=(await e.readFile(f(t,`${r}/index.ts`),{encoding:"utf-8"})).toString().split(`
`).filter(l=>!l.trim().startsWith("import ")).join(`
`).replace(/:.*=/g," =").replace(/ satisfies.*\/n/g,`
`);return(await import("data:application/javascript,"+encodeURIComponent(s))).default},Y=(e,t)=>({type:"Resource",languageTag:{type:"LanguageTag",name:t},body:Object.entries(e).map(([r,n])=>x(r,n)).flat()}),x=(e,t)=>{if(typeof t=="object")return Object.entries(t).map(([n,i])=>x(`${e}.${n}`,i)).flat();let r=b(t);return{type:"Message",id:{type:"Identifier",name:e},pattern:{type:"Pattern",elements:r.map(n=>{switch(n.kind){case"parameter":return Z(n);case"text":return{type:"Text",value:n.content};case"plural":return K(n)}})}}},Z=e=>({type:"Placeholder",body:{type:"VariableReference",name:e.key,metadata:{types:e.types,optional:e.optional,transforms:e.transforms}}}),K=e=>({type:"Text",value:`{{${[e.zero,e.one,e.two,e.few,e.many,e.other].filter(Boolean).join("|")}}}`});async function T({$fs:e,config:t,resources:r}){let n=p(e),i=await u(n);for(let a of r){let s=a.languageTag.name,o=ee(a),l=s===t.referenceLanguage?"BaseTranslation":"Translation",c=`import type { ${l} } from '${f(i.outputPath,i.typesFileName)}'
const ${s}: ${l} = ${o}

export default ${s}`;await n.writeFile(f(i.outputPath,`${s}/index.ts`),c)}}var ee=e=>{let t={};return e.body.map(te).forEach(([r,n])=>{let i=r.split("."),a=t;for(let s=0;s<i.length;s++){let o=i[s];s===i.length-1?a[o]=n:(a[o]||(a[o]={}),a=a[o])}}),JSON.stringify(t,null,3)},te=e=>[e.id.name,re(e.pattern)],re=e=>e.elements.map(ne).join(""),ne=e=>{switch(e.type){case"Text":return e.value;case"Placeholder":return ie(e)}},ie=({body:{name:e,metadata:t={}}})=>{let r=e;return t.optional&&(r+="?"),t.types?.length>0&&(t.types.length===3&&t.types.includes("string")&&t.types.includes("number")&&t.types.includes("boolean")||(r+=`:${t.types[0]}`)),t.transforms?.length>0&&(r+=`|${t.transforms.map(({name:n})=>n).join("|")}`),`{${r}}`};var ae=d(({env:e})=>({id:"ivanhofer.inlang-plugin-typesafe-i18n",async config(){let{base:t,locales:r}=await v(p(e.$fs));return{referenceLanguage:t,languages:r,readResources:({config:n})=>$({config:n,...e}),writeResources:({config:n,resources:i})=>T({config:n,resources:i,...e})}}}));export{ae as default};
/*! Bundled license information:

@inlang/core/dist/plugin/pluginBuildConfig.js:
  (*! DON'T TOP-LEVEL IMPORT ESBUILD PLUGINS. USE DYNAMIC IMPORTS. *)
  (*! See https://github.com/inlang/inlang/issues/486 *)
*/
//# sourceMappingURL=index.js.map
