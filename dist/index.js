var g=async e=>({baseLocale:"en",tempPath:"./node_modules/typesafe-i18n/temp-output/",outputPath:"./src/i18n/",outputFormat:"TypeScript",typesFileName:"i18n-types",utilFileName:"i18n-util",formattersTemplateFileName:"formatters",typesTemplateFileName:"custom-types",esmImports:!1,adapter:void 0,generateOnlyTypes:!1,banner:"/* eslint-disable */",runAfterGenerator:void 0,...e}),m=async e=>{let t=await e.readFile(".typesafe-i18n.json").catch(()=>"{}");return JSON.parse(t.toString())},c=async e=>{let t=await m(e);return g(t)};var l=(...e)=>e.map(t=>{for(;t.startsWith("/");)t=t.substring(1);for(;t.endsWith("/");)t=t.substring(0,t.length-1);return t}).join("/");async function P({config:e,$fs:t,$import:s}){let n=await c(t),a=[];for(let r of e.languages){let i=await f(t,s,n.outputPath,r);a.push(y(i,r))}return a}var f=async(e,t,s,n)=>{let o=(await e.readFile(l(s,`${n}/index.ts`),"utf-8")).toString().split(`
`).filter(p=>!p.trim().startsWith("import ")).join(`
`).replace(/:.*=/g," =").replace(/ satisfies.*\/n/g,`
`);return await import("data:application/javascript,"+encodeURIComponent(o))},y=(e,t)=>({type:"Resource",languageTag:{type:"LanguageTag",name:t},body:Object.entries(e).map(([s,n])=>d(s,n))}),d=(e,t)=>({type:"Message",id:{type:"Identifier",name:e},pattern:{type:"Pattern",elements:[{type:"Text",value:t}]}});async function $({$fs:e,config:t,resources:s}){let n=await c(e);for(let a of s){let r=a.languageTag.name,i=w(a),o=r===t.referenceLanguage?"BaseTranslation":"Translation",u=`import type { ${o} } from './${l(n.outputPath,n.typesFileName)}'

const ${r}: ${o} = ${i}

export default ${r}`;await e.writeFile(`${r}.ts`,u)}}var w=e=>{let t=Object.fromEntries(e.body.map(h));return JSON.stringify(t,null,3)};function h(e){return[e.id.name,R(e.pattern)]}function R(e){return e.elements.map(v).join("")}function v(e){switch(e.type){case"Text":return e.value;case"Placeholder":return F(e.placeholder)}}function F(e){switch(e.type){case"Expression":return`{${e.expression.name}}`}}export{P as readResources,$ as writeResources};
